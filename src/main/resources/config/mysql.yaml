apiVersion: v1
kind: Secret
metadata:
  name: mysql-credentials
type: Opaque
data:
  rootpasswd: MTIzNDU2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-scripts
data:
  init.sql: |
    -- revaluation.`user` definition
    CREATE DATABASE revaluation;
    USE revaluation;
    CREATE TABLE `user`
    (
        `id`          bigint                                                       NOT NULL AUTO_INCREMENT,
        `user_name`   varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
        `password`    varchar(256)                                                 NOT NULL,
        `create_time` bigint DEFAULT NULL,
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_users_name` (`user_name`)
    ) ENGINE = InnoDB
      AUTO_INCREMENT = 20
      DEFAULT CHARSET = utf8mb4
      COLLATE = utf8mb4_0900_ai_ci;
---
apiVersion: v1
kind: Service
metadata:
  name: mysqldb
  labels:
    app: mysqldb
    service: mysqldb
spec:
  ports:
  - port: 3306
    name: tcp
  selector:
    app: mysqldb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb-v1
  labels:
    app: mysqldb
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb
      version: v1
  template:
    metadata:
      labels:
        app: mysqldb
        version: v1
    spec:
      containers:
      - name: mysqldb
        image: mysql:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: rootpasswd
        args: ["--default-authentication-plugin","mysql_native_password"]
        volumeMounts:
        - name: var-lib-mysql
          mountPath: /var/lib/mysql
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: var-lib-mysql
        emptyDir: {}
      - name: init-scripts
        configMap:
          name: mysql-init-scripts